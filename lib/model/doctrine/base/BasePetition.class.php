<?php

/**
 * BasePetition
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int                                     $id                                              Type: integer(4), primary key
 * @property int                                     $campaign_id                                     Type: integer(4)
 * @property int                                     $follow_petition_id                              Type: integer(4)
 * @property int                                     $kind                                            Type: integer(1), default "1"
 * @property int                                     $titletype                                       Type: integer(1)
 * @property int                                     $nametype                                        Type: integer(1), default "2"
 * @property int                                     $status                                          Type: integer(4), default "1"
 * @property int                                     $validation_required                             Type: integer(4), default "1"
 * @property string                                  $name                                            Type: string
 * @property int                                     $addnum                                          Type: integer(4)
 * @property string                                  $addnote                                         Type: clob
 * @property string                                  $read_more_url                                   Type: string
 * @property string                                  $landing_url                                     Type: string
 * @property string                                  $key_visual                                      Type: string(60)
 * @property string                                  $paypal_email                                    Type: string(80)
 * @property string                                  $donate_url                                      Type: string(200)
 * @property int                                     $donate_widget_edit                              Type: integer(1)
 * @property string                                  $from_name                                       Type: string(80)
 * @property string                                  $from_email                                      Type: string(80)
 * @property string                                  $email_targets                                   Type: clob
 * @property string                                  $keywords_subst                                  Type: string(250)
 * @property int                                     $homepage                                        Type: integer(1)
 * @property string                                  $twitter_tags                                    Type: string(200)
 * @property string                                  $language_id                                     Type: string(5)
 * @property int                                     $mailing_list_id                                 Type: integer(4)
 * @property int                                     $editable                                        Type: integer(1), default "1"
 * @property int                                     $target_num                                      Type: integer(4)
 * @property int                                     $auto_greeting                                   Type: integer(1)
 * @property string                                  $start_at                                        Type: date, Date in ISO-8601 format (YYYY-MM-DD)
 * @property string                                  $end_at                                          Type: date, Date in ISO-8601 format (YYYY-MM-DD)
 * @property int                                     $with_comments                                   Type: integer(1)
 * @property int                                     $with_address                                    Type: integer(1)
 * @property int                                     $with_country                                    Type: integer(1)
 * @property int                                     $with_extra1                                     Type: integer(1)
 * @property int                                     $with_extra2                                     Type: integer(1)
 * @property int                                     $with_extra3                                     Type: integer(1)
 * @property string                                  $default_country                                 Type: string(5)
 * @property int                                     $subscribe_default                               Type: integer(1)
 * @property int                                     $show_keyvisual                                  Type: integer(1)
 * @property int                                     $show_embed                                      Type: integer(1), default "1"
 * @property int                                     $show_target                                     Type: integer(1), default "1"
 * @property int                                     $pledge_with_comments                            Type: integer(1), default "1"
 * @property string                                  $pledge_header_visual                            Type: string(60)
 * @property string                                  $pledge_key_visual                               Type: string(60)
 * @property string                                  $pledge_background_color                         Type: string(6), default "ffffff"
 * @property string                                  $pledge_color                                    Type: string(6), default "333333"
 * @property string                                  $pledge_head_color                               Type: string(6), default "333333"
 * @property string                                  $pledge_font                                     Type: string(80)
 * @property string                                  $pledge_info_columns                             Type: clob
 * @property string                                  $pledge_sort_column                              Type: string
 * @property string                                  $activity_at                                     Type: timestamp, Timestamp in ISO-8601 format (YYYY-MM-DD HH:MI:SS)
 * @property int                                     $widget_individualise                            Type: integer(1), default "1"
 * @property string                                  $style_font_family                               Type: string(80), default ""Lucida Sans Unicode", Verdana, Arial"
 * @property string                                  $style_title_color                               Type: string(7), default "#181716"
 * @property string                                  $style_body_color                                Type: string(7), default "#666666"
 * @property string                                  $style_button_color                              Type: string(7), default "#76b235"
 * @property string                                  $style_bg_left_color                             Type: string(7), default "#e5e5e5"
 * @property string                                  $style_bg_right_color                            Type: string(7), default "#f2f2f2"
 * @property string                                  $style_form_title_color                          Type: string(7), default "#181716"
 * @property string                                  $style_button_primary_color                      Type: string(7), default "#76b235"
 * @property string                                  $style_label_color                               Type: string(7), default "#666666"
 * @property string                                  $email_button_color                              Type: string(7), default "#b7d9f9"
 * @property int                                     $share                                           Type: integer(1), default "1"
 * @property int                                     $country_collection_id                           Type: integer(4)
 * @property int                                     $deleted_pendings                                Type: integer(4)
 * @property int                                     $deleted_hard_bounces                            Type: integer(4)
 * @property int                                     $deleted_bounces_manually                        Type: integer(4)
 * @property int                                     $label_mode                                      Type: integer(1), default "1"
 * @property int                                     $policy_checkbox                                 Type: integer(1), default "1"
 * @property int                                     $thank_you_email                                 Type: integer(1)
 * @property int                                     $themeId                                         Type: integer(4)
 * @property int                                     $last_signings                                   Type: integer(1)
 * @property int                                     $last_signings_city                              Type: integer(1)
 * @property int                                     $last_signings_country                           Type: integer(1)
 * @property int                                     $show_email_counter                              Type: integer(1)
 * @property int                                     $addnum_email_counter                            Type: integer(4)
 * @property int                                     $target_num_email_counter                        Type: integer(4)
 * @property int                                     $digest_enabled                                  Type: integer(1)
 * @property int                                     $cron_signings24                                 Type: integer(4)
 * @property string                                  $openeci_url                                     Type: string(120)
 * @property string                                  $openeci_channel                                 Type: string(40)
 * @property int                                     $openeci_counter_override                        Type: integer(1)
 * @property int                                     $openeci_counter_total                           Type: integer(4)
 * @property string                                  $openeci_counter_countries                       Type: clob
 * @property string                                  $mailexport                                      Type: clob
 * @property int                                     $mailexport_enabled                              Type: integer(1)
 * @property int                                     $privacy_policy_by_widget_data_owner             Type: integer(1)
 * @property Campaign                                $Campaign                                        
 * @property Language                                $Language                                        
 * @property MailingList                             $MailingList                                     
 * @property CountryCollection                       $CountryCollection                               
 * @property Petition                                $FollowPetition                                  
 * @property Doctrine_Collection|PetitionRights[]    $PetitionRights                                  
 * @property Doctrine_Collection|Petition[]          $FollowedByPetitions                             
 * @property Doctrine_Collection|PetitionText[]      $PetitionText                                    
 * @property Doctrine_Collection|MediaFile[]         $MediaFile                                       
 * @property Doctrine_Collection|Widget[]            $Widget                                          
 * @property Doctrine_Collection|PetitionSigning[]   $PetitionSigning                                 
 * @property Doctrine_Collection|Ticket[]            $Tickets                                         
 * @property Doctrine_Collection|PledgeItem[]        $PledgeItems                                     
 * @property Doctrine_Collection|PetitionContact[]   $PetitionContacts                                
 * @property Doctrine_Collection|PetitionApiToken[]  $ApiTokens                                       
 * @property Doctrine_Collection|Download[]          $Downloads                                       
 * @property Doctrine_Collection|DigestEmail[]       $DigestEmails                                    
 *  
 * @method int                                       getId()                                          Type: integer(4), primary key
 * @method int                                       getCampaignId()                                  Type: integer(4)
 * @method int                                       getFollowPetitionId()                            Type: integer(4)
 * @method int                                       getKind()                                        Type: integer(1), default "1"
 * @method int                                       getTitletype()                                   Type: integer(1)
 * @method int                                       getNametype()                                    Type: integer(1), default "2"
 * @method int                                       getStatus()                                      Type: integer(4), default "1"
 * @method int                                       getValidationRequired()                          Type: integer(4), default "1"
 * @method string                                    getName()                                        Type: string
 * @method int                                       getAddnum()                                      Type: integer(4)
 * @method string                                    getAddnote()                                     Type: clob
 * @method string                                    getReadMoreUrl()                                 Type: string
 * @method string                                    getLandingUrl()                                  Type: string
 * @method string                                    getKeyVisual()                                   Type: string(60)
 * @method string                                    getPaypalEmail()                                 Type: string(80)
 * @method string                                    getDonateUrl()                                   Type: string(200)
 * @method int                                       getDonateWidgetEdit()                            Type: integer(1)
 * @method string                                    getFromName()                                    Type: string(80)
 * @method string                                    getFromEmail()                                   Type: string(80)
 * @method string                                    getEmailTargets()                                Type: clob
 * @method string                                    getKeywordsSubst()                               Type: string(250)
 * @method int                                       getHomepage()                                    Type: integer(1)
 * @method string                                    getTwitterTags()                                 Type: string(200)
 * @method string                                    getLanguageId()                                  Type: string(5)
 * @method int                                       getMailingListId()                               Type: integer(4)
 * @method int                                       getEditable()                                    Type: integer(1), default "1"
 * @method int                                       getTargetNum()                                   Type: integer(4)
 * @method int                                       getAutoGreeting()                                Type: integer(1)
 * @method string                                    getStartAt()                                     Type: date, Date in ISO-8601 format (YYYY-MM-DD)
 * @method string                                    getEndAt()                                       Type: date, Date in ISO-8601 format (YYYY-MM-DD)
 * @method int                                       getWithComments()                                Type: integer(1)
 * @method int                                       getWithAddress()                                 Type: integer(1)
 * @method int                                       getWithCountry()                                 Type: integer(1)
 * @method int                                       getWithExtra1()                                  Type: integer(1)
 * @method int                                       getWithExtra2()                                  Type: integer(1)
 * @method int                                       getWithExtra3()                                  Type: integer(1)
 * @method string                                    getDefaultCountry()                              Type: string(5)
 * @method int                                       getSubscribeDefault()                            Type: integer(1)
 * @method int                                       getShowKeyvisual()                               Type: integer(1)
 * @method int                                       getShowEmbed()                                   Type: integer(1), default "1"
 * @method int                                       getShowTarget()                                  Type: integer(1), default "1"
 * @method int                                       getPledgeWithComments()                          Type: integer(1), default "1"
 * @method string                                    getPledgeHeaderVisual()                          Type: string(60)
 * @method string                                    getPledgeKeyVisual()                             Type: string(60)
 * @method string                                    getPledgeBackgroundColor()                       Type: string(6), default "ffffff"
 * @method string                                    getPledgeColor()                                 Type: string(6), default "333333"
 * @method string                                    getPledgeHeadColor()                             Type: string(6), default "333333"
 * @method string                                    getPledgeFont()                                  Type: string(80)
 * @method string                                    getPledgeInfoColumns()                           Type: clob
 * @method string                                    getPledgeSortColumn()                            Type: string
 * @method string                                    getActivityAt()                                  Type: timestamp, Timestamp in ISO-8601 format (YYYY-MM-DD HH:MI:SS)
 * @method int                                       getWidgetIndividualise()                         Type: integer(1), default "1"
 * @method string                                    getStyleFontFamily()                             Type: string(80), default ""Lucida Sans Unicode", Verdana, Arial"
 * @method string                                    getStyleTitleColor()                             Type: string(7), default "#181716"
 * @method string                                    getStyleBodyColor()                              Type: string(7), default "#666666"
 * @method string                                    getStyleButtonColor()                            Type: string(7), default "#76b235"
 * @method string                                    getStyleBgLeftColor()                            Type: string(7), default "#e5e5e5"
 * @method string                                    getStyleBgRightColor()                           Type: string(7), default "#f2f2f2"
 * @method string                                    getStyleFormTitleColor()                         Type: string(7), default "#181716"
 * @method string                                    getStyleButtonPrimaryColor()                     Type: string(7), default "#76b235"
 * @method string                                    getStyleLabelColor()                             Type: string(7), default "#666666"
 * @method string                                    getEmailButtonColor()                            Type: string(7), default "#b7d9f9"
 * @method int                                       getShare()                                       Type: integer(1), default "1"
 * @method int                                       getCountryCollectionId()                         Type: integer(4)
 * @method int                                       getDeletedPendings()                             Type: integer(4)
 * @method int                                       getDeletedHardBounces()                          Type: integer(4)
 * @method int                                       getDeletedBouncesManually()                      Type: integer(4)
 * @method int                                       getLabelMode()                                   Type: integer(1), default "1"
 * @method int                                       getPolicyCheckbox()                              Type: integer(1), default "1"
 * @method int                                       getThankYouEmail()                               Type: integer(1)
 * @method int                                       getThemeid()                                     Type: integer(4)
 * @method int                                       getLastSignings()                                Type: integer(1)
 * @method int                                       getLastSigningsCity()                            Type: integer(1)
 * @method int                                       getLastSigningsCountry()                         Type: integer(1)
 * @method int                                       getShowEmailCounter()                            Type: integer(1)
 * @method int                                       getAddnumEmailCounter()                          Type: integer(4)
 * @method int                                       getTargetNumEmailCounter()                       Type: integer(4)
 * @method int                                       getDigestEnabled()                               Type: integer(1)
 * @method int                                       getCronSignings24()                              Type: integer(4)
 * @method string                                    getOpeneciUrl()                                  Type: string(120)
 * @method string                                    getOpeneciChannel()                              Type: string(40)
 * @method int                                       getOpeneciCounterOverride()                      Type: integer(1)
 * @method int                                       getOpeneciCounterTotal()                         Type: integer(4)
 * @method string                                    getOpeneciCounterCountries()                     Type: clob
 * @method string                                    getMailexport()                                  Type: clob
 * @method int                                       getMailexportEnabled()                           Type: integer(1)
 * @method int                                       getPrivacyPolicyByWidgetDataOwner()              Type: integer(1)
 * @method Campaign                                  getCampaign()                                    
 * @method Language                                  getLanguage()                                    
 * @method MailingList                               getMailingList()                                 
 * @method CountryCollection                         getCountryCollection()                           
 * @method Petition                                  getFollowPetition()                              
 * @method Doctrine_Collection|PetitionRights[]      getPetitionRights()                              
 * @method Doctrine_Collection|Petition[]            getFollowedByPetitions()                         
 * @method Doctrine_Collection|PetitionText[]        getPetitionText()                                
 * @method Doctrine_Collection|MediaFile[]           getMediaFile()                                   
 * @method Doctrine_Collection|Widget[]              getWidget()                                      
 * @method Doctrine_Collection|PetitionSigning[]     getPetitionSigning()                             
 * @method Doctrine_Collection|Ticket[]              getTickets()                                     
 * @method Doctrine_Collection|PledgeItem[]          getPledgeItems()                                 
 * @method Doctrine_Collection|PetitionContact[]     getPetitionContacts()                            
 * @method Doctrine_Collection|PetitionApiToken[]    getApiTokens()                                   
 * @method Doctrine_Collection|Download[]            getDownloads()                                   
 * @method Doctrine_Collection|DigestEmail[]         getDigestEmails()                                
 *  
 * @method Petition                                  setId(int $val)                                  Type: integer(4), primary key
 * @method Petition                                  setCampaignId(int $val)                          Type: integer(4)
 * @method Petition                                  setFollowPetitionId(int $val)                    Type: integer(4)
 * @method Petition                                  setKind(int $val)                                Type: integer(1), default "1"
 * @method Petition                                  setTitletype(int $val)                           Type: integer(1)
 * @method Petition                                  setNametype(int $val)                            Type: integer(1), default "2"
 * @method Petition                                  setStatus(int $val)                              Type: integer(4), default "1"
 * @method Petition                                  setValidationRequired(int $val)                  Type: integer(4), default "1"
 * @method Petition                                  setName(string $val)                             Type: string
 * @method Petition                                  setAddnum(int $val)                              Type: integer(4)
 * @method Petition                                  setAddnote(string $val)                          Type: clob
 * @method Petition                                  setReadMoreUrl(string $val)                      Type: string
 * @method Petition                                  setLandingUrl(string $val)                       Type: string
 * @method Petition                                  setKeyVisual(string $val)                        Type: string(60)
 * @method Petition                                  setPaypalEmail(string $val)                      Type: string(80)
 * @method Petition                                  setDonateUrl(string $val)                        Type: string(200)
 * @method Petition                                  setDonateWidgetEdit(int $val)                    Type: integer(1)
 * @method Petition                                  setFromName(string $val)                         Type: string(80)
 * @method Petition                                  setFromEmail(string $val)                        Type: string(80)
 * @method Petition                                  setEmailTargets(string $val)                     Type: clob
 * @method Petition                                  setKeywordsSubst(string $val)                    Type: string(250)
 * @method Petition                                  setHomepage(int $val)                            Type: integer(1)
 * @method Petition                                  setTwitterTags(string $val)                      Type: string(200)
 * @method Petition                                  setLanguageId(string $val)                       Type: string(5)
 * @method Petition                                  setMailingListId(int $val)                       Type: integer(4)
 * @method Petition                                  setEditable(int $val)                            Type: integer(1), default "1"
 * @method Petition                                  setTargetNum(int $val)                           Type: integer(4)
 * @method Petition                                  setAutoGreeting(int $val)                        Type: integer(1)
 * @method Petition                                  setStartAt(string $val)                          Type: date, Date in ISO-8601 format (YYYY-MM-DD)
 * @method Petition                                  setEndAt(string $val)                            Type: date, Date in ISO-8601 format (YYYY-MM-DD)
 * @method Petition                                  setWithComments(int $val)                        Type: integer(1)
 * @method Petition                                  setWithAddress(int $val)                         Type: integer(1)
 * @method Petition                                  setWithCountry(int $val)                         Type: integer(1)
 * @method Petition                                  setWithExtra1(int $val)                          Type: integer(1)
 * @method Petition                                  setWithExtra2(int $val)                          Type: integer(1)
 * @method Petition                                  setWithExtra3(int $val)                          Type: integer(1)
 * @method Petition                                  setDefaultCountry(string $val)                   Type: string(5)
 * @method Petition                                  setSubscribeDefault(int $val)                    Type: integer(1)
 * @method Petition                                  setShowKeyvisual(int $val)                       Type: integer(1)
 * @method Petition                                  setShowEmbed(int $val)                           Type: integer(1), default "1"
 * @method Petition                                  setShowTarget(int $val)                          Type: integer(1), default "1"
 * @method Petition                                  setPledgeWithComments(int $val)                  Type: integer(1), default "1"
 * @method Petition                                  setPledgeHeaderVisual(string $val)               Type: string(60)
 * @method Petition                                  setPledgeKeyVisual(string $val)                  Type: string(60)
 * @method Petition                                  setPledgeBackgroundColor(string $val)            Type: string(6), default "ffffff"
 * @method Petition                                  setPledgeColor(string $val)                      Type: string(6), default "333333"
 * @method Petition                                  setPledgeHeadColor(string $val)                  Type: string(6), default "333333"
 * @method Petition                                  setPledgeFont(string $val)                       Type: string(80)
 * @method Petition                                  setPledgeInfoColumns(string $val)                Type: clob
 * @method Petition                                  setPledgeSortColumn(string $val)                 Type: string
 * @method Petition                                  setActivityAt(string $val)                       Type: timestamp, Timestamp in ISO-8601 format (YYYY-MM-DD HH:MI:SS)
 * @method Petition                                  setWidgetIndividualise(int $val)                 Type: integer(1), default "1"
 * @method Petition                                  setStyleFontFamily(string $val)                  Type: string(80), default ""Lucida Sans Unicode", Verdana, Arial"
 * @method Petition                                  setStyleTitleColor(string $val)                  Type: string(7), default "#181716"
 * @method Petition                                  setStyleBodyColor(string $val)                   Type: string(7), default "#666666"
 * @method Petition                                  setStyleButtonColor(string $val)                 Type: string(7), default "#76b235"
 * @method Petition                                  setStyleBgLeftColor(string $val)                 Type: string(7), default "#e5e5e5"
 * @method Petition                                  setStyleBgRightColor(string $val)                Type: string(7), default "#f2f2f2"
 * @method Petition                                  setStyleFormTitleColor(string $val)              Type: string(7), default "#181716"
 * @method Petition                                  setStyleButtonPrimaryColor(string $val)          Type: string(7), default "#76b235"
 * @method Petition                                  setStyleLabelColor(string $val)                  Type: string(7), default "#666666"
 * @method Petition                                  setEmailButtonColor(string $val)                 Type: string(7), default "#b7d9f9"
 * @method Petition                                  setShare(int $val)                               Type: integer(1), default "1"
 * @method Petition                                  setCountryCollectionId(int $val)                 Type: integer(4)
 * @method Petition                                  setDeletedPendings(int $val)                     Type: integer(4)
 * @method Petition                                  setDeletedHardBounces(int $val)                  Type: integer(4)
 * @method Petition                                  setDeletedBouncesManually(int $val)              Type: integer(4)
 * @method Petition                                  setLabelMode(int $val)                           Type: integer(1), default "1"
 * @method Petition                                  setPolicyCheckbox(int $val)                      Type: integer(1), default "1"
 * @method Petition                                  setThankYouEmail(int $val)                       Type: integer(1)
 * @method Petition                                  setThemeid(int $val)                             Type: integer(4)
 * @method Petition                                  setLastSignings(int $val)                        Type: integer(1)
 * @method Petition                                  setLastSigningsCity(int $val)                    Type: integer(1)
 * @method Petition                                  setLastSigningsCountry(int $val)                 Type: integer(1)
 * @method Petition                                  setShowEmailCounter(int $val)                    Type: integer(1)
 * @method Petition                                  setAddnumEmailCounter(int $val)                  Type: integer(4)
 * @method Petition                                  setTargetNumEmailCounter(int $val)               Type: integer(4)
 * @method Petition                                  setDigestEnabled(int $val)                       Type: integer(1)
 * @method Petition                                  setCronSignings24(int $val)                      Type: integer(4)
 * @method Petition                                  setOpeneciUrl(string $val)                       Type: string(120)
 * @method Petition                                  setOpeneciChannel(string $val)                   Type: string(40)
 * @method Petition                                  setOpeneciCounterOverride(int $val)              Type: integer(1)
 * @method Petition                                  setOpeneciCounterTotal(int $val)                 Type: integer(4)
 * @method Petition                                  setOpeneciCounterCountries(string $val)          Type: clob
 * @method Petition                                  setMailexport(string $val)                       Type: clob
 * @method Petition                                  setMailexportEnabled(int $val)                   Type: integer(1)
 * @method Petition                                  setPrivacyPolicyByWidgetDataOwner(int $val)      Type: integer(1)
 * @method Petition                                  setCampaign(Campaign $val)                       
 * @method Petition                                  setLanguage(Language $val)                       
 * @method Petition                                  setMailingList(MailingList $val)                 
 * @method Petition                                  setCountryCollection(CountryCollection $val)     
 * @method Petition                                  setFollowPetition(Petition $val)                 
 * @method Petition                                  setPetitionRights(Doctrine_Collection $val)      
 * @method Petition                                  setFollowedByPetitions(Doctrine_Collection $val) 
 * @method Petition                                  setPetitionText(Doctrine_Collection $val)        
 * @method Petition                                  setMediaFile(Doctrine_Collection $val)           
 * @method Petition                                  setWidget(Doctrine_Collection $val)              
 * @method Petition                                  setPetitionSigning(Doctrine_Collection $val)     
 * @method Petition                                  setTickets(Doctrine_Collection $val)             
 * @method Petition                                  setPledgeItems(Doctrine_Collection $val)         
 * @method Petition                                  setPetitionContacts(Doctrine_Collection $val)    
 * @method Petition                                  setApiTokens(Doctrine_Collection $val)           
 * @method Petition                                  setDownloads(Doctrine_Collection $val)           
 * @method Petition                                  setDigestEmails(Doctrine_Collection $val)        
 *  
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePetition extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('petition');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('campaign_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('follow_petition_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('kind', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('titletype', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('nametype', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 2,
             'length' => 1,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 4,
             ));
        $this->hasColumn('validation_required', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('addnum', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('addnote', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('read_more_url', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('landing_url', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('key_visual', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             ));
        $this->hasColumn('paypal_email', 'string', 80, array(
             'type' => 'string',
             'length' => 80,
             ));
        $this->hasColumn('donate_url', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 200,
             ));
        $this->hasColumn('donate_widget_edit', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('from_name', 'string', 80, array(
             'type' => 'string',
             'length' => 80,
             ));
        $this->hasColumn('from_email', 'string', 80, array(
             'type' => 'string',
             'length' => 80,
             ));
        $this->hasColumn('email_targets', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('keywords_subst', 'string', 250, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 250,
             ));
        $this->hasColumn('homepage', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('twitter_tags', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('language_id', 'string', 5, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 5,
             ));
        $this->hasColumn('mailing_list_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('editable', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('target_num', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('auto_greeting', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('start_at', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('end_at', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('with_comments', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('with_address', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('with_country', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('with_extra1', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('with_extra2', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('with_extra3', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('default_country', 'string', 5, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 5,
             ));
        $this->hasColumn('subscribe_default', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('show_keyvisual', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('show_embed', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('show_target', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('pledge_with_comments', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('pledge_header_visual', 'string', 60, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 60,
             ));
        $this->hasColumn('pledge_key_visual', 'string', 60, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 60,
             ));
        $this->hasColumn('pledge_background_color', 'string', 6, array(
             'type' => 'string',
             'notnull' => false,
             'default' => 'ffffff',
             'length' => 6,
             ));
        $this->hasColumn('pledge_color', 'string', 6, array(
             'type' => 'string',
             'notnull' => false,
             'default' => '333333',
             'length' => 6,
             ));
        $this->hasColumn('pledge_head_color', 'string', 6, array(
             'type' => 'string',
             'notnull' => false,
             'default' => '333333',
             'length' => 6,
             ));
        $this->hasColumn('pledge_font', 'string', 80, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 80,
             ));
        $this->hasColumn('pledge_info_columns', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));
        $this->hasColumn('pledge_sort_column', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('activity_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('widget_individualise', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('style_font_family', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '"Lucida Sans Unicode", Verdana, Arial',
             'length' => 80,
             ));
        $this->hasColumn('style_title_color', 'string', 7, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '#181716',
             'length' => 7,
             ));
        $this->hasColumn('style_body_color', 'string', 7, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '#666666',
             'length' => 7,
             ));
        $this->hasColumn('style_button_color', 'string', 7, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '#76b235',
             'length' => 7,
             ));
        $this->hasColumn('style_bg_left_color', 'string', 7, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '#e5e5e5',
             'length' => 7,
             ));
        $this->hasColumn('style_bg_right_color', 'string', 7, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '#f2f2f2',
             'length' => 7,
             ));
        $this->hasColumn('style_form_title_color', 'string', 7, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '#181716',
             'length' => 7,
             ));
        $this->hasColumn('style_button_primary_color', 'string', 7, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '#76b235',
             'length' => 7,
             ));
        $this->hasColumn('style_label_color', 'string', 7, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '#666666',
             'length' => 7,
             ));
        $this->hasColumn('email_button_color', 'string', 7, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '#b7d9f9',
             'length' => 7,
             ));
        $this->hasColumn('share', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('country_collection_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('deleted_pendings', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('deleted_hard_bounces', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('deleted_bounces_manually', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('label_mode', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('policy_checkbox', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('thank_you_email', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('themeId', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('last_signings', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('last_signings_city', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('last_signings_country', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('show_email_counter', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('addnum_email_counter', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('target_num_email_counter', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('digest_enabled', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('cron_signings24', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('openeci_url', 'string', 120, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 120,
             ));
        $this->hasColumn('openeci_channel', 'string', 40, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 40,
             ));
        $this->hasColumn('openeci_counter_override', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('openeci_counter_total', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('openeci_counter_countries', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));
        $this->hasColumn('mailexport', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));
        $this->hasColumn('mailexport_enabled', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('privacy_policy_by_widget_data_owner', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));


        $this->index('petition_status', array(
             'fields' => 
             array(
              0 => 'status',
             ),
             ));
        $this->index('petition_home_stat', array(
             'fields' => 
             array(
              0 => 'status',
              1 => 'homepage',
             ),
             ));
        $this->index('petition_name', array(
             'fields' => 
             array(
              'name' => 
              array(
              'length' => 100,
              ),
             ),
             ));
        $this->index('petition_activity', array(
             'fields' => 
             array(
              0 => 'activity_at',
              1 => 'status',
             ),
             ));
        $this->index('petition_activity2', array(
             'fields' => 
             array(
              0 => 'campaign_id',
              1 => 'activity_at',
              2 => 'status',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Campaign', array(
             'local' => 'campaign_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Language', array(
             'local' => 'language_id',
             'foreign' => 'id'));

        $this->hasOne('MailingList', array(
             'local' => 'mailing_list_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('CountryCollection', array(
             'local' => 'country_collection_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Petition as FollowPetition', array(
             'local' => 'follow_petition_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('PetitionRights', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('Petition as FollowedByPetitions', array(
             'local' => 'id',
             'foreign' => 'follow_petition_id'));

        $this->hasMany('PetitionText', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('MediaFile', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('Widget', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('PetitionSigning', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('Ticket as Tickets', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('PledgeItem as PledgeItems', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('PetitionContact as PetitionContacts', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('PetitionApiToken as ApiTokens', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('Download as Downloads', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('DigestEmail as DigestEmails', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $cachetaggable0 = new Doctrine_Template_Cachetaggable(array(
             'skipOnChange' => 
             array(
              0 => 'activity_at',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($cachetaggable0);
    }
}